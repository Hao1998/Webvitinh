@model List<Model.ProductCategory>


@{
    ViewData["Title"] = "Test";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section header{
    Category Pop-up
}

<!--<form method="get" asp-controller="ProductCategory" asp-action="Test">--->
<div class="panel-body">
    <form method="get" asp-controller="ProductCategory" asp-action="Test">
        <div class="row form-group">
            <div class="col-lg-12">
                @*<div class="col-md-4">
                    <input type="text" class="form-control" name="keyword" value="@ViewBag.Keyword" />
                </div>
                <div class="col-md-4">
                    <input type="submit" class="btn btn-success" />Search
                </div>*@
            </div>
        </div>
    </form>
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th class="categoryid">CategoryID</th>
                        <th>Name</th>
                        <th>ParentId</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Name</td>
                            <td>@item.ParentId</td>
                            <td>@item.Status</td>
                            <td><button class="opener" data-id="@item.Id">View</button></td>
                        </tr>
                    }
                    <!--Phân trang-->
                    @if (ViewBag.TotalPage > 1)
                    {
                        var pageDisplay = (int)ViewBag.MaxPage;
                        int totalPage = (int)ViewBag.TotalPage;
                        int currentPage = ((int)ViewBag.Page);

                        // Create numeric links
                        var startPageIndex = Math.Max(1, currentPage - pageDisplay / 2);
                        var endPageIndex = Math.Min(totalPage, currentPage + pageDisplay / 2);
                        var link = "/Admin/ProductCategory/Index";
                        <nav>
                            <ul class="pagination">
                                @if (currentPage > ViewBag.First)
                                {
                                    <li><a href="@link?page=@ViewBag.First" title="Front page" class="first"><i class="fa fa-angle-double-left"></i></a></li>
                                    <li>
                                        <a href="@link?page=@ViewBag.Prev" title="Last page" class="prev"><i class="fa fa-angle-left"></i></a>
                                    </li>

                                }
                                @for (int i = startPageIndex; i <= endPageIndex; i++)
                                {
                                    if (currentPage == i)
                                    {

                                        <li> <a href="@link?page=@i" class="active" title="Page @i">@i</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="@link?page=@i" title="Trang @i" class="pos">@i</a></li>
                                    }
                                }
                                @if (currentPage < totalPage)
                                {
                                    <li><a href="@link?page=@ViewBag.Next" class="next" title="Front page"><i class="fa fa-angle-right"></i></a></li>
                                    <li> <a href="@link?page=@ViewBag.Last" class="last" title="Last page"><i class="fa fa-angle-double-right"></i></a></li>
                                }

                            </ul>
                        </nav>

                    }
                </tbody>
            </table>
        </div>
</div>



<div id="dialog" align="center">
    <table id="jqGrid" align="center"></table>
    <div id="jqGridPager"></div>
</div>
<script type="text/javascript">
    var clearGrid = function () {
        $("#jqGrid").jqGrid('GridDestroy');
    };

    $(function () {
        $("#dialog").dialog({

            autoOpen: false,
            width: 800,
            height: 550,
            show: {
                effect: "blind",
                duration: 1000,
                width: 780
            },
            hide: {
                effect: "explode",
                duration: 1000
            },
            close: function (event, ui) {
                //kết  hợp local array với ajax
                $.jgrid.gridUnload('#jqGrid');
                //location.reload();
                //$("#jqGrid").jqGrid('GridDestroy');
            }
        });

        $(".opener").on("click", function () {
            $("#dialog").dialog("open");
        });
    });
    $(".opener").on('click', function () {
        $.ajax({
            type: "POST",
            data:
            {
                categoryid: $(this).data('id')
            },
            dataType: 'json',
            url: "GetDetail",
            success: function (response) {
                console.log(response);
                //console.log(test);
                var temp = response;
                /*for (var i = 1; i <= response.length; i++) {
                    var item = response[i];
                    gridArrayData.push({
                        id: response.id,
                        name: response.name,
                        description: response.description,
                        price: response.price,
                        categoryId: response.categoryId
                    });
                }*/
                console.log(temp);
                $(document).ready(function () {
                    $("#jqGrid").jqGrid({
                        data: response,
                        datatype: "local",
                        shrinkToFit: true,
                        colModel: [
                            { key: true, label: 'id', name: 'id' },
                            { label: 'name', name: 'name', editable: true },
                            { label: 'description', name: 'description', editable: true },
                            { label: 'price', name: 'price', editable: true },
                            { label: 'categoryId', name: 'categoryId', editable: true },
                            { label: 'status', name: 'status', editable: true },
                        ],
                        loadonce: true,
                        viewrecords: true,
                        width: 700,
                        height: 450,
                        rowNum: 15,
                        rowList: [10, 15, 20, 30, 50],
                        pager: "#jqGridPager"
                    });
                    $('#jqGrid').navGrid('#jqGridPager',
                        // the buttons to appear on the toolbar of the grid
                        { edit: true, add: true, del: true, search: true, refresh: false, view: false, position: "left", cloneToTop: false },
                        // options for the Edit Dialog
                        {
                            editCaption: "The Edit Dialog",
                            url: 'EditProductCategoryJson',
                            afterSubmit: function () {
                                $(this).jqGrid("setGridParam", { datatype: 'local' });
                                return [true];
                            },
                            beforeSubmit: function (postdata, form, oper) {
                                if (confirm('Are you sure you want to update this row?')) {
                                    return [true, ''];
                                } else {
                                    return [false, 'You can not submit!'];
                                }
                            },
                            closeAfterEdit: true,
                            errorTextFormat: function (data) {
                                return 'Error: ' + data.responseText
                            }
                        },
                        // options for the Add Dialog
                        {
                            url: "AddProductCategoryJson",
                            afterSubmit: function () {
                                $(this).jqGrid("setGridParam", {
                                    datatype: 'local'
                                });
                                return [true];
                            },
                            closeAfterAdd: true,
                        },
                        // options for the Delete Dailog
                        {
                            url: "DeleteProductCategoryJson",
                            beforeSubmit: function (postdata, form, oper) {
                                if (confirm('Are you wanna delete?')) {

                                    return [true, ''];
                                } else {
                                    return [false, 'You can not delete!'];
                                }
                            },
                            afterSubmit: function () {
                                $(this).jqGrid("setGridParam", {
                                    datatype: 'local'
                                });
                                return [true];
                            },
                            errorTextFormat: function (data) {
                                return 'Error: ' + data.responseText
                            }
                        });
                });
            }
        });
    });

</script>

@section jsFooter{
    <script src="~/admin/Admin/Scripts/jqGrid/grid.locale-en.js"></script>
    <script src="~/admin/Admin/Scripts/jqGrid/jquery.jqGrid.js"></script>
}
